const Voucher = require('../schema/voucherSchema');
const Tour = require('../schema/tourSchema');
exports.createVoucher = async (req, res) => {
  try {
    const { tour_id, code, discount, condition, start_date, end_date } = req.body;

    const voucher = new Voucher({
      tour_id: tour_id || null,
      code,
      discount,
      condition,
      start_date,
      end_date
    });

    await voucher.save();
    res.status(201).json({ message: 'T·∫°o voucher th√†nh c√¥ng', voucher });
  } catch (err) {
    res.status(500).json({ message: 'L·ªói t·∫°o voucher', error: err });
  }
};

exports.getAllVouchers = async (req, res) => {
  try {
    // üëâ L·∫•y t·∫•t c·∫£, kh√¥ng l·ªçc theo tour_id
    const vouchers = await Voucher.find().populate('tour_id');
    res.status(200).json(vouchers);
  } catch (err) {
    console.error('‚ùå L·ªói khi l·∫•y danh s√°ch voucher:', err);
    res.status(500).json({ message: 'L·ªói khi l·∫•y danh s√°ch voucher', error: err.message });
  }
};


exports.getVoucherByCode = async (req, res) => {
  try {
    const voucher = await Voucher.findOne({ code: req.params.code });
    if (!voucher) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y voucher' });
    }
    res.status(200).json(voucher);
  } catch (err) {
    res.status(500).json({ message: 'L·ªói t√¨m voucher' });
  }
};

exports.deleteVoucher = async (req, res) => {
  try {
    await Voucher.findByIdAndDelete(req.params.id);
    res.status(200).json({ message: 'Xo√° voucher th√†nh c√¥ng' });
  } catch (err) {
    res.status(500).json({ message: 'L·ªói khi xo√° voucher' });
  }
};

