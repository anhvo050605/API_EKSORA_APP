router.post('/receive-webhook', express.json(), async (req, res) => {
  try {
    console.log('üîç Headers:', req.headers);
    console.log('üì¶ Raw Body:', req.body);

    // PayOS g·ª≠i th·∫≥ng body, kh√¥ng c√≥ field "data"
    const payload = req.body;
    if (!payload) {
      return res.status(400).send("Payload kh√¥ng h·ª£p l·ªá");
    }

    const orderCode = payload.orderCode;
    const payosStatus = payload.status; // "PAID" ho·∫∑c "CANCELLED"
    const amount = payload.amount;
    const message = payload.description || 'Kh√¥ng c√≥ m√¥ t·∫£ l·ªói';

    if (!orderCode) {
      console.warn("‚ö†Ô∏è Kh√¥ng c√≥ orderCode trong payload:", payload);
      return res.status(200).send("Webhook test: kh√¥ng c√≥ orderCode");
    }

    // T√¨m booking
    let booking = await Booking.findOne({ order_code: orderCode }).populate('tour_id');
    if (!booking) {
      console.error("‚ùå Kh√¥ng t√¨m th·∫•y booking v·ªõi orderCode:", orderCode);
      return res.status(404).send('Booking kh√¥ng t·ªìn t·∫°i');
    }

    // Mapping tr·∫°ng th√°i
    let payment_status = (payosStatus === 'PAID') ? 'paid' : 'failed';
    console.log(`üìå K·∫øt qu·∫£ thanh to√°n: status=${payosStatus} => ${payment_status}`);

    // T·∫°o transaction
    const transaction = new Transaction({
      booking_id: booking._id,
      amount,
      payment_method: "payos",
      status: payment_status,
      note: message
    });
    await transaction.save();

    // Update booking
    booking.status = payment_status;
    await booking.save();

    console.log("‚úÖ L∆∞u transaction & c·∫≠p nh·∫≠t booking th√†nh c√¥ng");

    // G·ª≠i email
    try {
      if (payment_status === 'paid' && booking.email) {
        await sendBookingConfirmation(booking.email, booking, true);
        console.log(`üìß Email X√ÅC NH·∫¨N g·ª≠i t·ªõi ${booking.email}`);
      } else if (payment_status === 'failed' && booking.email) {
        await sendBookingFailed(booking.email, booking);
        console.log(`üìß Email TH·∫§T B·∫†I g·ª≠i t·ªõi ${booking.email}`);
      }
    } catch (emailErr) {
      console.error("‚ùå L·ªói g·ª≠i email:", emailErr.message);
    }

    res.status(200).send('OK');
  } catch (err) {
    console.error("‚ùå L·ªói webhook:", err);
    res.status(500).send('L·ªói server');
  }
});
